@model BooksNet.Areas.Admin.ViewModels.Book.NewBookViewModel

@{
  ViewBag.Title = "Books";
}

@section styles {

    <link href="~/Content/chosen.min.css" rel="stylesheet" />

}
<div class="index-page books-search" ng-app="booksSearch">

    <div class="wrapper">
        <div class="header header-filter" style="background-image: url('/Content/images/books.jpeg');">
        </div>

        <div class="main main-raised">
            <div class="section section-basic">

                <div class="row books no-padding" ng-controller="search">
                    <div class="col-md-3">
                        <div class="panel panel-default ">
                            <div class="panel-heading">
                                <h3>Filter By :</h3>
                            </div>
                            <div class="panel-body">
                                <div class="form-group label-floating">
                                    @Html.LabelFor(model => model.Title, new { @class = "control-label required" })
                                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control", ng_model = "title" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Age, new { @class = "control-label" })
                                    @Html.EnumDropDownListFor(model => model.Age, new { @class = "form-control selectpicker dropdown-header", ng_model = "age" })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.CategoryId, Model.Category, "Unselected...", new { @class = "form-control selectpicker dropdown-header", ng_model = "category" })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.Categories, new { @class = "control-label" })
                                    @Html.ListBoxFor(model => model.CategoriesId, Model.Categories, new { @class = "form-control selectpicker dropdown-header ", ng_model = "categoryList" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Publisher, new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.PublisherId, Model.Publisher, "Unselected...", new { @class = "form-control selectpicker dropdown-header", ng_model = "publisher" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Authors, new { @class = "control-label" })
                                    @Html.ListBoxFor(model => model.AuthorsId, Model.Authors, new { @class = "form-control selectpicker dropdown-header", ng_model = "authorList" })
                                </div>
                                <div class="form-group label-floating">
                                    @Html.LabelFor(model => model.Print, new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Print, new { @class = "form-control", ng_model = "print" })
                                </div>
                                <div class="form-group label-floating">
                                    @Html.LabelFor(model => model.PrintDate, new { @class = "control-label" })
                                    @Html.EditorFor(model => model.PrintDate, new { htmlAttributes = new { @class = "form-control datepicker", ng_model = "printDate" } })
                                </div>

                                <div class="form-group">
                                    <button class="btn btn-info btn-block" ng-click="search()">Search</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div>
                            <h3>We have found {{booksResult.length}} {{booksResult.length > 1 ? 'items' : 'item'}}.</h3>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12" ng-repeat="b in booksResult">
                            <div class="book">
                                <div class="cover">
                                    <img ng-src="{{'/Resources/BooksCoverImage/'+b.CoverImageName}}" alt="{{b.Title}}">
                                </div>
                                <div class="title">
                                    <h3>{{b.Title | maxLength}}</h3>
                                </div>
                                <div class="overlay">
                                    <h3>{{b.Title}}</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>

    <script>

        $(function () {
            $('select').chosen({ width: '100%', disable_search_threshold: 10, no_results_text: "...." });
            $('.chosen-container').click(function () {
                $("select").trigger("chosen:updated");
            });
        });

        var app = angular.module('booksSearch', []);

        app.filter('maxLength', function () {
            return function (s) {
                return s.length > 20 ? s.slice(0, 17) + '...' : s;
            }
        });

        app.controller('search', ['$scope', '$http', function ($scope, $http) {
            $scope.booksResult = [];
            $http({ method: 'GET', url: '/Api/Books' }).then(
                function (responde) {
                    $scope.booksResult = responde.data;
                }, function () {
                    console.log(responde); console.log('error');
                });
            $scope.catid = "";
            $scope.catlist = "";

            getSearchData = function (scope) {
                return {
                    title: scope.title,
                    age: scope.age,
                    category: scope.category,
                    categories: scope.categoryList,
                    publisher: scope.publisher,
                    authors: scope.authorList,
                    print: scope.print,
                    printDate: scope.printDate
                }
            }

            $scope.search = function () {
                $http({ method: 'GET', url: '/Api/BooksSearch', params: getSearchData($scope) }).then(
                    function (responde) {
                        $scope.booksResult = responde.data;
                    }, function (responde) {
                        console.log(responde); console.log('error');
                    });
            }

        }]);
    </script>
}