@model BooksNet.Areas.Admin.ViewModels.Book.NewBookViewModel

@{
  ViewBag.Title = "Books";
}

@section styles { 
<style>

    .bootstrap-select {
        width: 220px \0
    }

        .bootstrap-select > .dropdown-toggle {
            width: 100%;
            padding-right: 25px;
            z-index: 1
        }

        .bootstrap-select > select {
            position: absolute !important;
            bottom: 0;
            left: 50%;
            display: block !important;
            width: .5px !important;
            height: 100% !important;
            padding: 0 !important;
            opacity: 0 !important;
            border: none
        }

            .bootstrap-select > select.mobile-device {
                top: 0;
                left: 0;
                display: block !important;
                width: 100% !important;
                z-index: 2
            }

    .error .bootstrap-select .dropdown-toggle, .has-error .bootstrap-select .dropdown-toggle {
        border-color: #b94a48
    }

    .bootstrap-select.fit-width {
        width: auto !important
    }

    .bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn) {
        width: 100%
    }

    .bootstrap-select.form-control {
        margin-bottom: 0;
        padding: 0;
        border: none
    }

        .bootstrap-select.form-control:not([class*=col-]) {
            width: 100%
        }

        .bootstrap-select.form-control.input-group-btn {
            z-index: auto
        }

            .bootstrap-select.form-control.input-group-btn:not(:first-child):not(:last-child) > .btn {
                border-radius: 0
            }

    .bootstrap-select.btn-group:not(.input-group-btn), .bootstrap-select.btn-group[class*=col-] {
        float: none;
        display: inline-block;
        margin-left: 0
    }

        .bootstrap-select.btn-group.dropdown-menu-right, .bootstrap-select.btn-group[class*=col-].dropdown-menu-right, .row .bootstrap-select.btn-group[class*=col-].dropdown-menu-right {
            float: right
        }

    .form-group .bootstrap-select.btn-group, .form-horizontal .bootstrap-select.btn-group, .form-inline .bootstrap-select.btn-group {
        margin-bottom: 0
    }

    .form-group-lg .bootstrap-select.btn-group.form-control, .form-group-sm .bootstrap-select.btn-group.form-control {
        padding: 0
    }

    .form-inline .bootstrap-select.btn-group .form-control {
        width: 100%
    }

    .bootstrap-select.btn-group .dropdown-menu li.disabled a:focus, .bootstrap-select.btn-group .dropdown-menu li.disabled a:hover {
        box-shadow: none
    }

    .bootstrap-select.btn-group.disabled, .bootstrap-select.btn-group > .disabled {
        cursor: not-allowed
    }

        .bootstrap-select.btn-group.disabled:focus, .bootstrap-select.btn-group > .disabled:focus {
            outline: none !important
        }

    .bootstrap-select.btn-group.bs-container {
        position: absolute;
        height: 0 !important;
        padding: 0 !important
    }

        .bootstrap-select.btn-group.bs-container .dropdown-menu {
            z-index: 1060
        }

    .bootstrap-select.btn-group .dropdown-toggle .filter-option {
        display: inline-block;
        overflow: hidden;
        width: 100%;
        text-align: left;
        text-overflow: ellipsis
    }

    .bootstrap-select.btn-group .dropdown-toggle .caret {
        position: absolute;
        top: 50%;
        right: 16px;
        margin-top: -2px;
        vertical-align: middle
    }

    .bootstrap-select.btn-group[class*=col-] .dropdown-toggle {
        width: 100%
    }

    .bootstrap-select.btn-group .dropdown-menu {
        border-radius: 4px;
        padding: 0;
        min-width: 100%;
        box-sizing: border-box
    }

        .bootstrap-select.btn-group .dropdown-menu.inner {
            position: static;
            float: none;
            border: 0;
            padding: 5px 0;
            margin: 0;
            box-shadow: none
        }

        .bootstrap-select.btn-group .dropdown-menu li {
            position: relative
        }

            .bootstrap-select.btn-group .dropdown-menu li.active small {
                color: #fff
            }

            .bootstrap-select.btn-group .dropdown-menu li.disabled a {
                cursor: not-allowed
            }

            .bootstrap-select.btn-group .dropdown-menu li a {
                cursor: pointer;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
                outline: 0
            }

                .bootstrap-select.btn-group .dropdown-menu li a:focus, .bootstrap-select.btn-group .dropdown-menu li a:hover {
                    box-shadow: 0 4px 20px 0 rgba(0,0,0,.14),0 7px 10px -5px rgba(156,39,176,.4)
                }

                .bootstrap-select.btn-group .dropdown-menu li a.opt {
                    position: relative;
                    padding-left: 2.25em
                }

                .bootstrap-select.btn-group .dropdown-menu li a span.check-mark {
                    display: none
                }

                .bootstrap-select.btn-group .dropdown-menu li a span.text {
                    display: inline-block
                }

            .bootstrap-select.btn-group .dropdown-menu li small {
                padding-left: .5em
            }

        .bootstrap-select.btn-group .dropdown-menu .notify {
            position: absolute;
            bottom: 5px;
            width: 96%;
            margin: 0 2%;
            min-height: 26px;
            padding: 3px 5px;
            background: #f5f5f5;
            border: 1px solid #e3e3e3;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
            pointer-events: none;
            opacity: .9;
            box-sizing: border-box
        }

    .bootstrap-select.btn-group .no-results {
        padding: 3px;
        background: #f5f5f5;
        margin: 0 5px;
        white-space: nowrap
    }

    .bootstrap-select.btn-group.fit-width .dropdown-toggle .filter-option {
        position: static
    }

    .bootstrap-select.btn-group.fit-width .dropdown-toggle .caret {
        position: static;
        top: auto;
        margin-top: -1px
    }

    .bootstrap-select.btn-group.show-tick .dropdown-menu li.selected a span.check-mark {
        position: absolute;
        display: inline-block;
        right: 15px;
        font-size: 16px
    }

    .bootstrap-select.btn-group.show-tick .dropdown-menu li a span.text {
        margin-right: 34px
    }

    .bootstrap-select.show-menu-arrow.open > .dropdown-toggle {
        z-index: 1061
    }

    .bootstrap-select.show-menu-arrow .dropdown-toggle:before {
        content: "";
        border-left: 7px solid transparent;
        border-right: 7px solid transparent;
        border-bottom: 7px solid hsla(0,0%,80%,.2);
        position: absolute;
        bottom: -4px;
        left: 9px;
        display: none
    }

    .bootstrap-select.show-menu-arrow .dropdown-toggle:after {
        content: "";
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        border-bottom: 6px solid #fff;
        position: absolute;
        bottom: -4px;
        left: 10px;
        display: none
    }

    .bootstrap-select.show-menu-arrow.dropup .dropdown-toggle:before {
        bottom: auto;
        top: -3px;
        border-top: 7px solid hsla(0,0%,80%,.2);
        border-bottom: 0
    }

    .bootstrap-select.show-menu-arrow.dropup .dropdown-toggle:after {
        bottom: auto;
        top: -3px;
        border-top: 6px solid #fff;
        border-bottom: 0
    }

    .bootstrap-select.show-menu-arrow.pull-right .dropdown-toggle:before {
        right: 12px;
        left: auto
    }

    .bootstrap-select.show-menu-arrow.pull-right .dropdown-toggle:after {
        right: 13px;
        left: auto
    }

    .bootstrap-select.show-menu-arrow.open > .dropdown-toggle:after, .bootstrap-select.show-menu-arrow.open > .dropdown-toggle:before {
        display: block
    }

    .dropdown-header button {
        background: #fff !important;
        color: #000 !important;
        font-size: 0.9em !important;
    }

    .dropdown-header span {
        font-size: 0.9em !important;
    }

    /* Update hover color */
    .dropdown-menu li a:active, .dropdown-menu li a:focus, .dropdown-menu li a:hover {
        background-color: #0366d6;
        color: #fff;
    }

    .bootstrap-select.btn-group .dropdown-menu li a:focus,
    .bootstrap-select.btn-group .dropdown-menu li a:hover {
        box-shadow: 0 4px 20px 0 rgba(5, 34, 66, 0.1), 0 7px 10px -5px rgba(3, 102, 214, 0.2);
    }
    </style>
}
<div class="index-page books-search" ng-app="booksIndex">

    <div class="wrapper">
        <div class="header header-filter" style="background-image: url('/Content/images/books.jpeg');">
        </div>

        <div class="main main-raised">
            <div class="section section-basic">

                <div class="row books no-padding" ng-controller="latesUpload">
                    <div class="col-md-3">
                        <div class="panel panel-default ">
                            <div class="panel-heading">
                                <h3>Filter By :</h3>
                            </div>
                            <div class="panel-body">
                                <div class="form-group label-floating">
                                    @Html.LabelFor(model => model.Title, new { @class = "control-label required" })
                                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Age, new { @class = "control-label" })
                                    @Html.EnumDropDownListFor(model => model.Age, new { @class = "form-control selectpicker dropdown-header" })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.CategoryId, Model.Category, new { @class = "form-control selectpicker dropdown-header" })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.Categories, new { @class = "control-label" })
                                    @Html.ListBoxFor(model => model.CategoriesId, Model.Categories, new { @class = "form-control selectpicker dropdown-header " })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Publisher, new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.PublisherId, Model.Publisher, new { @class = "form-control selectpicker dropdown-header" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Authors, new { @class = "control-label" })
                                    @Html.ListBoxFor(model => model.AuthorsId, Model.Authors, new { @class = "form-control selectpicker dropdown-header" })
                                </div>
                                <div class="form-group label-floating">
                                    @Html.LabelFor(model => model.Print, new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Print, new { @class = "form-control" })
                                </div>
                                <div class="form-group label-floating">
                                    @Html.LabelFor(model => model.PrintDate, new { @class = "control-label" })
                                    @Html.EditorFor(model => model.PrintDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div>
                            <h3>We have found {{latesUploadBooks.length}} {{latesUploadBooks.length > 1 ? 'items' : 'item'}} .</h3>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12" ng-repeat="b in latesUploadBooks">
                            <div class="book">
                                <div class="cover">
                                    <img ng-src="{{'/Resources/BooksCoverImage/'+b.CoverImageName}}" alt="{{b.Title}}">
                                </div>
                                <div class="title">
                                    <h3>{{b.Title | maxLength}}</h3>
                                </div>
                                <div class="overlay">
                                    <h3>{{b.Title}}</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/angular.min.js"></script>
<script src="~/Areas/Admin/Scripts/jquery.select-bootstrap.js"></script>
    <script>
        var app = angular.module('booksIndex', []);

        app.filter('maxLength', function () {
            return function (s) {
                return s.length > 20 ? s.slice(0, 17) + '...' : s;
            }
        });

        app.controller('latesUpload', ['$scope', '$http', function ($scope, $http) {
            $scope.latesUploadBooks = [];
            $http({ method: 'GET', url: '/Api/LatestUpload' }).then(
                function (responde) {
                    $scope.latesUploadBooks = responde.data;
                }, function () {
                    console.log(responde); console.log('error');
                });

        }]);
    </script>
}